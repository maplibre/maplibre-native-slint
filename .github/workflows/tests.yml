name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        build_type: [Release, Debug]
    
    steps:
    - name: Cache apt packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-cache-${{ hashFiles('.github/workflows/tests.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-cache-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          ccache \
          cmake \
          curl \
          pkg-config \
          git \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libegl1-mesa-dev \
          libx11-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libxext-dev \
          xvfb \
          libbrotli-dev \
          libcurl4-openssl-dev \
          libglfw3-dev \
          libidn2-dev \
          libjpeg-dev \
          libnghttp2-dev \
          libpng-dev \
          libpsl-dev \
          libssl-dev \
          libuv1-dev \
          libwebp-dev \
          libzstd-dev \
          libunistring-dev \
          meson \
          zlib1g-dev \
          gcc \
          lcov \
          clang

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Checkout code
      uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.build_type }}

    - name: Cache Submodules
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-submodules-${{ hashFiles('**/.gitmodules') }}
        restore-keys: |
          ${{ runner.os }}-submodules-
        
    - name: Cache build dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          build/_deps
        key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.build_type }}-
          ${{ runner.os }}-build-
    
    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_TESTS=ON \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
    
    - name: Build
      run: |
        cd build
        cmake --build . --parallel $(nproc)
    
    - name: Run tests with Xvfb
      run: |
        cd build
        xvfb-run -a -s "-screen 0 1024x768x24 -ac +extension GLX +render -noreset" \
          ctest --output-on-failure --parallel $(nproc)
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.build_type }}
        path: |
          build/Testing/Temporary/LastTest.log
          build/Testing/Temporary/LastTestsFailed.log
        retention-days: 5
