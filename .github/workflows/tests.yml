name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ci-image:
    name: Build CI Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_name: ${{ steps.get_image_name.outputs.image_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image name
        id: get_image_name
        run: echo "image_name=ghcr.io/${{ github.repository_owner }}/maplibre-native-slint-ci:${{ github.sha }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT
      - name: Build CI image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.get_image_name.outputs.image_name }}
          target: base
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Run Tests
    needs: build-ci-image
    runs-on: ubuntu-latest
    container: ${{ needs.build-ci-image.outputs.image_name }}
    
    strategy:
      matrix:
        build_type: [Release, Debug]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        submodules: recursive

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.build_type }}

    - name: Cache Submodules
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-submodules-${{ hashFiles('**/.gitmodules') }}
        restore-keys: |
          ${{ runner.os }}-submodules-
        
    - name: Cache build dependencies
      uses: actions/cache@v4
      with:
        path: |
          /root/.cargo/registry
          /root/.cargo/git
          build/_deps
        key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ matrix.build_type }}-
          ${{ runner.os }}-build-
    
    - name: Configure CMake
      run: |
        export PATH="/root/.cargo/bin:${PATH}"
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_TESTS=ON \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
    
    - name: Build
      run: |
        cd build
        cmake --build . --parallel $(nproc)
    
    - name: Run tests with Xvfb
      run: |
        cd build
        xvfb-run -a -s "-screen 0 1024x768x24 -ac +extension GLX +render -noreset" \
          ctest --output-on-failure --parallel $(nproc)
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.build_type }}
        path: |
          build/Testing/Temporary/LastTest.log
          build/Testing/Temporary/LastTestsFailed.log
        retention-days: 5
